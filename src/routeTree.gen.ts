/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TeacherIndexRouteImport } from './routes/teacher/index'
import { Route as StudentIndexRouteImport } from './routes/student/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as TeacherSettingsRouteImport } from './routes/teacher/settings'
import { Route as StudentSettingsRouteImport } from './routes/student/settings'
import { Route as AuthVerifyCodeRouteImport } from './routes/auth/verify-code'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as AdminSettingsRouteImport } from './routes/admin/settings'
import { Route as TeacherSettingsIndexRouteImport } from './routes/teacher/settings/index'
import { Route as TeacherDashboardIndexRouteImport } from './routes/teacher/dashboard/index'
import { Route as StudentSettingsIndexRouteImport } from './routes/student/settings/index'
import { Route as StudentDashboardIndexRouteImport } from './routes/student/dashboard/index'
import { Route as AdminSettingsIndexRouteImport } from './routes/admin/settings/index'
import { Route as AdminDashboardIndexRouteImport } from './routes/admin/dashboard/index'
import { Route as TeacherSettingsNotificationsRouteImport } from './routes/teacher/settings/notifications'
import { Route as TeacherSettingsDisplayRouteImport } from './routes/teacher/settings/display'
import { Route as TeacherSettingsAppearanceRouteImport } from './routes/teacher/settings/appearance'
import { Route as TeacherSettingsAccountRouteImport } from './routes/teacher/settings/account'
import { Route as StudentSettingsNotificationsRouteImport } from './routes/student/settings/notifications'
import { Route as StudentSettingsDisplayRouteImport } from './routes/student/settings/display'
import { Route as StudentSettingsAppearanceRouteImport } from './routes/student/settings/appearance'
import { Route as StudentSettingsAccountRouteImport } from './routes/student/settings/account'
import { Route as AdminSettingsNotificationsRouteImport } from './routes/admin/settings/notifications'
import { Route as AdminSettingsDisplayRouteImport } from './routes/admin/settings/display'
import { Route as AdminSettingsAppearanceRouteImport } from './routes/admin/settings/appearance'
import { Route as AdminSettingsAccountRouteImport } from './routes/admin/settings/account'
import { Route as TeacherDashboardClassClassIdRouteImport } from './routes/teacher/dashboard/class/$classId'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherIndexRoute = TeacherIndexRouteImport.update({
  id: '/teacher/',
  path: '/teacher/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentIndexRoute = StudentIndexRouteImport.update({
  id: '/student/',
  path: '/student/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherSettingsRoute = TeacherSettingsRouteImport.update({
  id: '/teacher/settings',
  path: '/teacher/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentSettingsRoute = StudentSettingsRouteImport.update({
  id: '/student/settings',
  path: '/student/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyCodeRoute = AuthVerifyCodeRouteImport.update({
  id: '/auth/verify-code',
  path: '/auth/verify-code',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsRoute = AdminSettingsRouteImport.update({
  id: '/admin/settings',
  path: '/admin/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherSettingsIndexRoute = TeacherSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const TeacherDashboardIndexRoute = TeacherDashboardIndexRouteImport.update({
  id: '/teacher/dashboard/',
  path: '/teacher/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const StudentSettingsIndexRoute = StudentSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const StudentDashboardIndexRoute = StudentDashboardIndexRouteImport.update({
  id: '/student/dashboard/',
  path: '/student/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminSettingsIndexRoute = AdminSettingsIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminDashboardIndexRoute = AdminDashboardIndexRouteImport.update({
  id: '/admin/dashboard/',
  path: '/admin/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const TeacherSettingsNotificationsRoute =
  TeacherSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => TeacherSettingsRoute,
  } as any)
const TeacherSettingsDisplayRoute = TeacherSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const TeacherSettingsAppearanceRoute =
  TeacherSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => TeacherSettingsRoute,
  } as any)
const TeacherSettingsAccountRoute = TeacherSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => TeacherSettingsRoute,
} as any)
const StudentSettingsNotificationsRoute =
  StudentSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => StudentSettingsRoute,
  } as any)
const StudentSettingsDisplayRoute = StudentSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const StudentSettingsAppearanceRoute =
  StudentSettingsAppearanceRouteImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => StudentSettingsRoute,
  } as any)
const StudentSettingsAccountRoute = StudentSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => StudentSettingsRoute,
} as any)
const AdminSettingsNotificationsRoute =
  AdminSettingsNotificationsRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AdminSettingsRoute,
  } as any)
const AdminSettingsDisplayRoute = AdminSettingsDisplayRouteImport.update({
  id: '/display',
  path: '/display',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsAppearanceRoute = AdminSettingsAppearanceRouteImport.update({
  id: '/appearance',
  path: '/appearance',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const AdminSettingsAccountRoute = AdminSettingsAccountRouteImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => AdminSettingsRoute,
} as any)
const TeacherDashboardClassClassIdRoute =
  TeacherDashboardClassClassIdRouteImport.update({
    id: '/teacher/dashboard/class/$classId',
    path: '/teacher/dashboard/class/$classId',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin/settings': typeof AdminSettingsRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-code': typeof AuthVerifyCodeRoute
  '/student/settings': typeof StudentSettingsRouteWithChildren
  '/teacher/settings': typeof TeacherSettingsRouteWithChildren
  '/admin': typeof AdminIndexRoute
  '/student': typeof StudentIndexRoute
  '/teacher': typeof TeacherIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/student/settings/account': typeof StudentSettingsAccountRoute
  '/student/settings/appearance': typeof StudentSettingsAppearanceRoute
  '/student/settings/display': typeof StudentSettingsDisplayRoute
  '/student/settings/notifications': typeof StudentSettingsNotificationsRoute
  '/teacher/settings/account': typeof TeacherSettingsAccountRoute
  '/teacher/settings/appearance': typeof TeacherSettingsAppearanceRoute
  '/teacher/settings/display': typeof TeacherSettingsDisplayRoute
  '/teacher/settings/notifications': typeof TeacherSettingsNotificationsRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/student/dashboard': typeof StudentDashboardIndexRoute
  '/student/settings/': typeof StudentSettingsIndexRoute
  '/teacher/dashboard': typeof TeacherDashboardIndexRoute
  '/teacher/settings/': typeof TeacherSettingsIndexRoute
  '/teacher/dashboard/class/$classId': typeof TeacherDashboardClassClassIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-code': typeof AuthVerifyCodeRoute
  '/admin': typeof AdminIndexRoute
  '/student': typeof StudentIndexRoute
  '/teacher': typeof TeacherIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/student/settings/account': typeof StudentSettingsAccountRoute
  '/student/settings/appearance': typeof StudentSettingsAppearanceRoute
  '/student/settings/display': typeof StudentSettingsDisplayRoute
  '/student/settings/notifications': typeof StudentSettingsNotificationsRoute
  '/teacher/settings/account': typeof TeacherSettingsAccountRoute
  '/teacher/settings/appearance': typeof TeacherSettingsAppearanceRoute
  '/teacher/settings/display': typeof TeacherSettingsDisplayRoute
  '/teacher/settings/notifications': typeof TeacherSettingsNotificationsRoute
  '/admin/dashboard': typeof AdminDashboardIndexRoute
  '/admin/settings': typeof AdminSettingsIndexRoute
  '/student/dashboard': typeof StudentDashboardIndexRoute
  '/student/settings': typeof StudentSettingsIndexRoute
  '/teacher/dashboard': typeof TeacherDashboardIndexRoute
  '/teacher/settings': typeof TeacherSettingsIndexRoute
  '/teacher/dashboard/class/$classId': typeof TeacherDashboardClassClassIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/admin/settings': typeof AdminSettingsRouteWithChildren
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-code': typeof AuthVerifyCodeRoute
  '/student/settings': typeof StudentSettingsRouteWithChildren
  '/teacher/settings': typeof TeacherSettingsRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/student/': typeof StudentIndexRoute
  '/teacher/': typeof TeacherIndexRoute
  '/admin/settings/account': typeof AdminSettingsAccountRoute
  '/admin/settings/appearance': typeof AdminSettingsAppearanceRoute
  '/admin/settings/display': typeof AdminSettingsDisplayRoute
  '/admin/settings/notifications': typeof AdminSettingsNotificationsRoute
  '/student/settings/account': typeof StudentSettingsAccountRoute
  '/student/settings/appearance': typeof StudentSettingsAppearanceRoute
  '/student/settings/display': typeof StudentSettingsDisplayRoute
  '/student/settings/notifications': typeof StudentSettingsNotificationsRoute
  '/teacher/settings/account': typeof TeacherSettingsAccountRoute
  '/teacher/settings/appearance': typeof TeacherSettingsAppearanceRoute
  '/teacher/settings/display': typeof TeacherSettingsDisplayRoute
  '/teacher/settings/notifications': typeof TeacherSettingsNotificationsRoute
  '/admin/dashboard/': typeof AdminDashboardIndexRoute
  '/admin/settings/': typeof AdminSettingsIndexRoute
  '/student/dashboard/': typeof StudentDashboardIndexRoute
  '/student/settings/': typeof StudentSettingsIndexRoute
  '/teacher/dashboard/': typeof TeacherDashboardIndexRoute
  '/teacher/settings/': typeof TeacherSettingsIndexRoute
  '/teacher/dashboard/class/$classId': typeof TeacherDashboardClassClassIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin/settings'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-code'
    | '/student/settings'
    | '/teacher/settings'
    | '/admin'
    | '/student'
    | '/teacher'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/student/settings/account'
    | '/student/settings/appearance'
    | '/student/settings/display'
    | '/student/settings/notifications'
    | '/teacher/settings/account'
    | '/teacher/settings/appearance'
    | '/teacher/settings/display'
    | '/teacher/settings/notifications'
    | '/admin/dashboard'
    | '/admin/settings/'
    | '/student/dashboard'
    | '/student/settings/'
    | '/teacher/dashboard'
    | '/teacher/settings/'
    | '/teacher/dashboard/class/$classId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-code'
    | '/admin'
    | '/student'
    | '/teacher'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/student/settings/account'
    | '/student/settings/appearance'
    | '/student/settings/display'
    | '/student/settings/notifications'
    | '/teacher/settings/account'
    | '/teacher/settings/appearance'
    | '/teacher/settings/display'
    | '/teacher/settings/notifications'
    | '/admin/dashboard'
    | '/admin/settings'
    | '/student/dashboard'
    | '/student/settings'
    | '/teacher/dashboard'
    | '/teacher/settings'
    | '/teacher/dashboard/class/$classId'
  id:
    | '__root__'
    | '/'
    | '/admin/settings'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-code'
    | '/student/settings'
    | '/teacher/settings'
    | '/admin/'
    | '/student/'
    | '/teacher/'
    | '/admin/settings/account'
    | '/admin/settings/appearance'
    | '/admin/settings/display'
    | '/admin/settings/notifications'
    | '/student/settings/account'
    | '/student/settings/appearance'
    | '/student/settings/display'
    | '/student/settings/notifications'
    | '/teacher/settings/account'
    | '/teacher/settings/appearance'
    | '/teacher/settings/display'
    | '/teacher/settings/notifications'
    | '/admin/dashboard/'
    | '/admin/settings/'
    | '/student/dashboard/'
    | '/student/settings/'
    | '/teacher/dashboard/'
    | '/teacher/settings/'
    | '/teacher/dashboard/class/$classId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminSettingsRoute: typeof AdminSettingsRouteWithChildren
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyCodeRoute: typeof AuthVerifyCodeRoute
  StudentSettingsRoute: typeof StudentSettingsRouteWithChildren
  TeacherSettingsRoute: typeof TeacherSettingsRouteWithChildren
  AdminIndexRoute: typeof AdminIndexRoute
  StudentIndexRoute: typeof StudentIndexRoute
  TeacherIndexRoute: typeof TeacherIndexRoute
  AdminDashboardIndexRoute: typeof AdminDashboardIndexRoute
  StudentDashboardIndexRoute: typeof StudentDashboardIndexRoute
  TeacherDashboardIndexRoute: typeof TeacherDashboardIndexRoute
  TeacherDashboardClassClassIdRoute: typeof TeacherDashboardClassClassIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/': {
      id: '/teacher/'
      path: '/teacher'
      fullPath: '/teacher'
      preLoaderRoute: typeof TeacherIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/': {
      id: '/student/'
      path: '/student'
      fullPath: '/student'
      preLoaderRoute: typeof StudentIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/settings': {
      id: '/teacher/settings'
      path: '/teacher/settings'
      fullPath: '/teacher/settings'
      preLoaderRoute: typeof TeacherSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/settings': {
      id: '/student/settings'
      path: '/student/settings'
      fullPath: '/student/settings'
      preLoaderRoute: typeof StudentSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-code': {
      id: '/auth/verify-code'
      path: '/auth/verify-code'
      fullPath: '/auth/verify-code'
      preLoaderRoute: typeof AuthVerifyCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings': {
      id: '/admin/settings'
      path: '/admin/settings'
      fullPath: '/admin/settings'
      preLoaderRoute: typeof AdminSettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/settings/': {
      id: '/teacher/settings/'
      path: '/'
      fullPath: '/teacher/settings/'
      preLoaderRoute: typeof TeacherSettingsIndexRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/dashboard/': {
      id: '/teacher/dashboard/'
      path: '/teacher/dashboard'
      fullPath: '/teacher/dashboard'
      preLoaderRoute: typeof TeacherDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/student/settings/': {
      id: '/student/settings/'
      path: '/'
      fullPath: '/student/settings/'
      preLoaderRoute: typeof StudentSettingsIndexRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/dashboard/': {
      id: '/student/dashboard/'
      path: '/student/dashboard'
      fullPath: '/student/dashboard'
      preLoaderRoute: typeof StudentDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/settings/': {
      id: '/admin/settings/'
      path: '/'
      fullPath: '/admin/settings/'
      preLoaderRoute: typeof AdminSettingsIndexRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/dashboard/': {
      id: '/admin/dashboard/'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AdminDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/teacher/settings/notifications': {
      id: '/teacher/settings/notifications'
      path: '/notifications'
      fullPath: '/teacher/settings/notifications'
      preLoaderRoute: typeof TeacherSettingsNotificationsRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/display': {
      id: '/teacher/settings/display'
      path: '/display'
      fullPath: '/teacher/settings/display'
      preLoaderRoute: typeof TeacherSettingsDisplayRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/appearance': {
      id: '/teacher/settings/appearance'
      path: '/appearance'
      fullPath: '/teacher/settings/appearance'
      preLoaderRoute: typeof TeacherSettingsAppearanceRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/teacher/settings/account': {
      id: '/teacher/settings/account'
      path: '/account'
      fullPath: '/teacher/settings/account'
      preLoaderRoute: typeof TeacherSettingsAccountRouteImport
      parentRoute: typeof TeacherSettingsRoute
    }
    '/student/settings/notifications': {
      id: '/student/settings/notifications'
      path: '/notifications'
      fullPath: '/student/settings/notifications'
      preLoaderRoute: typeof StudentSettingsNotificationsRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/display': {
      id: '/student/settings/display'
      path: '/display'
      fullPath: '/student/settings/display'
      preLoaderRoute: typeof StudentSettingsDisplayRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/appearance': {
      id: '/student/settings/appearance'
      path: '/appearance'
      fullPath: '/student/settings/appearance'
      preLoaderRoute: typeof StudentSettingsAppearanceRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/student/settings/account': {
      id: '/student/settings/account'
      path: '/account'
      fullPath: '/student/settings/account'
      preLoaderRoute: typeof StudentSettingsAccountRouteImport
      parentRoute: typeof StudentSettingsRoute
    }
    '/admin/settings/notifications': {
      id: '/admin/settings/notifications'
      path: '/notifications'
      fullPath: '/admin/settings/notifications'
      preLoaderRoute: typeof AdminSettingsNotificationsRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/display': {
      id: '/admin/settings/display'
      path: '/display'
      fullPath: '/admin/settings/display'
      preLoaderRoute: typeof AdminSettingsDisplayRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/appearance': {
      id: '/admin/settings/appearance'
      path: '/appearance'
      fullPath: '/admin/settings/appearance'
      preLoaderRoute: typeof AdminSettingsAppearanceRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/admin/settings/account': {
      id: '/admin/settings/account'
      path: '/account'
      fullPath: '/admin/settings/account'
      preLoaderRoute: typeof AdminSettingsAccountRouteImport
      parentRoute: typeof AdminSettingsRoute
    }
    '/teacher/dashboard/class/$classId': {
      id: '/teacher/dashboard/class/$classId'
      path: '/teacher/dashboard/class/$classId'
      fullPath: '/teacher/dashboard/class/$classId'
      preLoaderRoute: typeof TeacherDashboardClassClassIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface AdminSettingsRouteChildren {
  AdminSettingsAccountRoute: typeof AdminSettingsAccountRoute
  AdminSettingsAppearanceRoute: typeof AdminSettingsAppearanceRoute
  AdminSettingsDisplayRoute: typeof AdminSettingsDisplayRoute
  AdminSettingsNotificationsRoute: typeof AdminSettingsNotificationsRoute
  AdminSettingsIndexRoute: typeof AdminSettingsIndexRoute
}

const AdminSettingsRouteChildren: AdminSettingsRouteChildren = {
  AdminSettingsAccountRoute: AdminSettingsAccountRoute,
  AdminSettingsAppearanceRoute: AdminSettingsAppearanceRoute,
  AdminSettingsDisplayRoute: AdminSettingsDisplayRoute,
  AdminSettingsNotificationsRoute: AdminSettingsNotificationsRoute,
  AdminSettingsIndexRoute: AdminSettingsIndexRoute,
}

const AdminSettingsRouteWithChildren = AdminSettingsRoute._addFileChildren(
  AdminSettingsRouteChildren,
)

interface StudentSettingsRouteChildren {
  StudentSettingsAccountRoute: typeof StudentSettingsAccountRoute
  StudentSettingsAppearanceRoute: typeof StudentSettingsAppearanceRoute
  StudentSettingsDisplayRoute: typeof StudentSettingsDisplayRoute
  StudentSettingsNotificationsRoute: typeof StudentSettingsNotificationsRoute
  StudentSettingsIndexRoute: typeof StudentSettingsIndexRoute
}

const StudentSettingsRouteChildren: StudentSettingsRouteChildren = {
  StudentSettingsAccountRoute: StudentSettingsAccountRoute,
  StudentSettingsAppearanceRoute: StudentSettingsAppearanceRoute,
  StudentSettingsDisplayRoute: StudentSettingsDisplayRoute,
  StudentSettingsNotificationsRoute: StudentSettingsNotificationsRoute,
  StudentSettingsIndexRoute: StudentSettingsIndexRoute,
}

const StudentSettingsRouteWithChildren = StudentSettingsRoute._addFileChildren(
  StudentSettingsRouteChildren,
)

interface TeacherSettingsRouteChildren {
  TeacherSettingsAccountRoute: typeof TeacherSettingsAccountRoute
  TeacherSettingsAppearanceRoute: typeof TeacherSettingsAppearanceRoute
  TeacherSettingsDisplayRoute: typeof TeacherSettingsDisplayRoute
  TeacherSettingsNotificationsRoute: typeof TeacherSettingsNotificationsRoute
  TeacherSettingsIndexRoute: typeof TeacherSettingsIndexRoute
}

const TeacherSettingsRouteChildren: TeacherSettingsRouteChildren = {
  TeacherSettingsAccountRoute: TeacherSettingsAccountRoute,
  TeacherSettingsAppearanceRoute: TeacherSettingsAppearanceRoute,
  TeacherSettingsDisplayRoute: TeacherSettingsDisplayRoute,
  TeacherSettingsNotificationsRoute: TeacherSettingsNotificationsRoute,
  TeacherSettingsIndexRoute: TeacherSettingsIndexRoute,
}

const TeacherSettingsRouteWithChildren = TeacherSettingsRoute._addFileChildren(
  TeacherSettingsRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminSettingsRoute: AdminSettingsRouteWithChildren,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyCodeRoute: AuthVerifyCodeRoute,
  StudentSettingsRoute: StudentSettingsRouteWithChildren,
  TeacherSettingsRoute: TeacherSettingsRouteWithChildren,
  AdminIndexRoute: AdminIndexRoute,
  StudentIndexRoute: StudentIndexRoute,
  TeacherIndexRoute: TeacherIndexRoute,
  AdminDashboardIndexRoute: AdminDashboardIndexRoute,
  StudentDashboardIndexRoute: StudentDashboardIndexRoute,
  TeacherDashboardIndexRoute: TeacherDashboardIndexRoute,
  TeacherDashboardClassClassIdRoute: TeacherDashboardClassClassIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
