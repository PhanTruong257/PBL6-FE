/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProfileIndexRouteImport } from './routes/profile/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as ClassesIndexRouteImport } from './routes/classes/index'
import { Route as ClassesCreateClassRouteImport } from './routes/classes/create-class'
import { Route as AuthVerifyCodeRouteImport } from './routes/auth/verify-code'
import { Route as AuthResetPasswordRouteImport } from './routes/auth/reset-password'
import { Route as AuthRegisterRouteImport } from './routes/auth/register'
import { Route as AuthLoginRouteImport } from './routes/auth/login'
import { Route as AuthForgotPasswordRouteImport } from './routes/auth/forgot-password'
import { Route as UserSettingsProfileRouteImport } from './routes/user/settings/profile'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const ClassesIndexRoute = ClassesIndexRouteImport.update({
  id: '/classes/',
  path: '/classes/',
  getParentRoute: () => rootRouteImport,
} as any)
const ClassesCreateClassRoute = ClassesCreateClassRouteImport.update({
  id: '/classes/create-class',
  path: '/classes/create-class',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerifyCodeRoute = AuthVerifyCodeRouteImport.update({
  id: '/auth/verify-code',
  path: '/auth/verify-code',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthResetPasswordRoute = AuthResetPasswordRouteImport.update({
  id: '/auth/reset-password',
  path: '/auth/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/auth/register',
  path: '/auth/register',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/auth/login',
  path: '/auth/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/auth/forgot-password',
  path: '/auth/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const UserSettingsProfileRoute = UserSettingsProfileRouteImport.update({
  id: '/user/settings/profile',
  path: '/user/settings/profile',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-code': typeof AuthVerifyCodeRoute
  '/classes/create-class': typeof ClassesCreateClassRoute
  '/classes': typeof ClassesIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/user/settings/profile': typeof UserSettingsProfileRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-code': typeof AuthVerifyCodeRoute
  '/classes/create-class': typeof ClassesCreateClassRoute
  '/classes': typeof ClassesIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/user/settings/profile': typeof UserSettingsProfileRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/auth/forgot-password': typeof AuthForgotPasswordRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/auth/reset-password': typeof AuthResetPasswordRoute
  '/auth/verify-code': typeof AuthVerifyCodeRoute
  '/classes/create-class': typeof ClassesCreateClassRoute
  '/classes/': typeof ClassesIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/user/settings/profile': typeof UserSettingsProfileRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-code'
    | '/classes/create-class'
    | '/classes'
    | '/dashboard'
    | '/profile'
    | '/user/settings/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-code'
    | '/classes/create-class'
    | '/classes'
    | '/dashboard'
    | '/profile'
    | '/user/settings/profile'
  id:
    | '__root__'
    | '/'
    | '/auth/forgot-password'
    | '/auth/login'
    | '/auth/register'
    | '/auth/reset-password'
    | '/auth/verify-code'
    | '/classes/create-class'
    | '/classes/'
    | '/dashboard/'
    | '/profile/'
    | '/user/settings/profile'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthResetPasswordRoute: typeof AuthResetPasswordRoute
  AuthVerifyCodeRoute: typeof AuthVerifyCodeRoute
  ClassesCreateClassRoute: typeof ClassesCreateClassRoute
  ClassesIndexRoute: typeof ClassesIndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  UserSettingsProfileRoute: typeof UserSettingsProfileRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/classes/': {
      id: '/classes/'
      path: '/classes'
      fullPath: '/classes'
      preLoaderRoute: typeof ClassesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/classes/create-class': {
      id: '/classes/create-class'
      path: '/classes/create-class'
      fullPath: '/classes/create-class'
      preLoaderRoute: typeof ClassesCreateClassRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verify-code': {
      id: '/auth/verify-code'
      path: '/auth/verify-code'
      fullPath: '/auth/verify-code'
      preLoaderRoute: typeof AuthVerifyCodeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/reset-password': {
      id: '/auth/reset-password'
      path: '/auth/reset-password'
      fullPath: '/auth/reset-password'
      preLoaderRoute: typeof AuthResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/forgot-password': {
      id: '/auth/forgot-password'
      path: '/auth/forgot-password'
      fullPath: '/auth/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/user/settings/profile': {
      id: '/user/settings/profile'
      path: '/user/settings/profile'
      fullPath: '/user/settings/profile'
      preLoaderRoute: typeof UserSettingsProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthResetPasswordRoute: AuthResetPasswordRoute,
  AuthVerifyCodeRoute: AuthVerifyCodeRoute,
  ClassesCreateClassRoute: ClassesCreateClassRoute,
  ClassesIndexRoute: ClassesIndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  UserSettingsProfileRoute: UserSettingsProfileRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
